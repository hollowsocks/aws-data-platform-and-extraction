name: Build & Push Lambda Images

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      ingestion_job:
        description: 'Ingestion job to build (use job key or "all")'
        default: 'all'
        required: false

env:
  AUTO_BUILD_ENABLED: ${{ github.event_name == 'workflow_dispatch' && 'true' || vars.AUTO_BUILD_LAMBDAS || 'false' }}
  SELECTED_INGESTION_JOB: ${{ github.event_name == 'workflow_dispatch' && inputs.ingestion_job || vars.AUTO_BUILD_INGESTION_JOB || 'all' }}

jobs:
  compute-matrix:
    if: ${{ env.AUTO_BUILD_ENABLED == 'true' }}
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.render.outputs.include }}
    steps:
      - uses: actions/checkout@v4
      - id: render
        run: |
          python .github/scripts/render_matrix.py > matrix.json
          echo "include=$(cat matrix.json)" >> "$GITHUB_OUTPUT"
        env:
          INGESTION_JOB: ${{ env.SELECTED_INGESTION_JOB }}

  build:
    needs: compute-matrix
    if: ${{ env.AUTO_BUILD_ENABLED == 'true' && needs.compute-matrix.outputs.include != '[]' && needs.compute-matrix.outputs.include != '' }}
    strategy:
      matrix:
        include: ${{ fromJSON(needs.compute-matrix.outputs.include) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE_ARN }}
          aws-region: ${{ matrix.region }}
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region "${{ matrix.region }}" | \
            docker login --username AWS --password-stdin "${{ matrix.account_id }}.dkr.ecr.${{ matrix.region }}.amazonaws.com"
      - name: Build and push Lambda images
        env:
          BRAND: ${{ matrix.brand }}
          REGION: ${{ matrix.region }}
          LAMBDA_DIRS: ${{ join(matrix.lambdas, ',') }}
        run: scripts/build_push_lambdas.sh
